name: Build
on:
  push:
    paths:
      - 'setup.py'
      - 'setup.cfg'
      - 'PKG-INFO'
      - 'src/*.*'
      - 'src/**.py'
      - 'src/**.nim'
      - 'src/**.nims'
      - 'src/**.cfg'
      - '.github/workflows/*.yml'
      - '.github/workflows/*.yaml'
      - '.gitignore'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # New PIP is buggy, error "has different metadata"

    - uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: '1.4.2'
        no-color: true  # --noColor

    - name: Get Git Commit Short Hash
      id: vars
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "semver_date=$(date +'%y.%m.%d')" >> $GITHUB_ENV


    - name: Set Environment Variables
      uses: allenevans/set-env@v2.0.0
      with:
        NIM_VERSION:           "1.4.2"
        MAIN_MODULE:           "src/faster_than_requests.nim"
        PACKAGE_NAME:          "faster_than_requests"
        TWINE_USERNAME:        ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD:        ${{ secrets.PYPI_PASSWORD }}
        TWINE_NON_INTERACTIVE: 1
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    - name: Nimble Install dependencies
      run: |
        nimble -y refresh
        nimble -y install nimpy


    - uses: juancarlospaco/nimpretty-action@main
      with:
        folders: "src"


    # - name: Generate Documentation (Linux)
    #   if: runner.os == 'Linux'
    #   run: |
    #     nim doc --out:docs/index.html ${{ env.MAIN_MODULE }}
    #     nim rst2tex --out:docs/${{ env.PACKAGE_NAME }}.tex ${{ env.MAIN_MODULE }}


    - name: Compile Debug & import (Unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        nim c --app:lib --threads:on --out:$PACKAGE_NAME.so $MAIN_MODULE
        python3 -c "print(__import__('${{ env.PACKAGE_NAME }}').__file__)"


    - name: Compile Debug & import (Windows)
      if: runner.os == 'Windows'
      run: |
        nim c --app:lib --threads:on --out:${{ env.PACKAGE_NAME }}.pyd ${{ env.MAIN_MODULE }}
        python.exe -c "print(__import__('${{ env.PACKAGE_NAME }}').__file__)"


    - name: Commit Nimpretty Fixes  # Commit everything to Git repo
      uses: EndBug/add-and-commit@v4  # https://github.com/EndBug/add-and-commit/issues/67#issuecomment-711081492
      with:
        add: 'src/*.nim'
        force: true
        message: ${{ steps.vars.outputs.semver_date }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Cache Nim
      uses: actions/cache@v1
      with:
        path: $PWD/Nim/
        key: ${{ runner.os }}-nim
