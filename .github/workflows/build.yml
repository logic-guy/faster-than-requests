name: Build
on: [push, pull_request]

  # push:
  #   paths:
  #     - 'setup.py'
  #     - 'setup.cfg'
  #     - 'PKG-INFO'
  #     - 'faster_than_requests/*.*'
  #     - 'faster_than_requests/**.py'
  #     - 'faster_than_requests/**.nim'
  #     - 'faster_than_requests/**.nims'
  #     - 'faster_than_requests/**.cfg'
  #     - 'faster_than_requests/**.so'
  #     - 'faster_than_requests/**.dll'
  #     - '.github/workflows/*.yml'
  #     - '.github/workflows/*.yaml'
  #     - '.gitignore'

jobs:
  build:
    if: |
      !contains(github.event.head_commit.message, '[skip ci]')
    strategy:
      fail-fast: true
      matrix:
        platform:       [ubuntu-latest]
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture:   ["x64", "x86"]
        nim-channel:    [stable, devel]

    name: ${{ matrix.platform }}-${{ matrix.architecture }}-${{ matrix.python-version }}-${{ matrix.nim-channel }}
    runs-on: ${{ matrix.platform }}
    steps:


    - uses: actions/checkout@v2


    - name: Set Environment Variables
      uses: allenevans/set-env@v2.0.0
      with:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        CMD: "nim doc -d:nimStrictDelete -d:nimPreviewFloatRoundtrip -d:nimPreviewDotLikeOps --gc:orc --index:on --project --experimental:strictEffects --experimental:strictFuncs --styleCheck:usages --styleCheck:hint --outdir:../../docs"


    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}


    - uses: jiro4989/setup-nim-action@v1.0.2
      with:
        nim-version: ${{ matrix.nim-channel }}


    - name: Get Git Commit Short Hash
      id: vars
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "semver_date=$(date +'%y.%m.%d')" >> $GITHUB_ENV


    - name: Nimble Install dependencies
      run: |
        nimble -y refresh
        nimble -y install nimpy
        pip install nimporter


    - name: Build docs
      shell: bash
      run: |
        cd faster_than_requests/
        for i in *.nim; do
          $CMD $i
        done


    - name: Clean out
      shell: bash
      run: |
        rm --verbose --force --recursive docs/*.idx
        rm --verbose --force --recursive docs/nimcache/*.*
        rm --verbose --force --recursive docs/nimcache/runnableExamples/*.*
